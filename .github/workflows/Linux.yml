name: Linux

on: [push, pull_request]

jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        container:
        - {os: 'ubuntu:18.04', cli: 'DEBIAN_FRONTEND=noninteractive apt-get', dev: 'cmake build-essential', dep: 'apt-get install software-properties-common', pre: 'add-apt-repository ppa:ondrej/php -y', extra: 'ls'}
        - {os: 'ubuntu:latest', cli: 'DEBIAN_FRONTEND=noninteractive apt-get', dev: 'cmake build-essential', dep: 'apt-get install software-properties-common', pre: 'add-apt-repository ppa:ondrej/php -y', extra: 'ls'}
        - {os: 'centos:7', cli: 'yum', dev: 'cmake group install "Development Tools" ninja-build', dep: 'yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm https://rpms.remirepo.net/enterprise/remi-release-7.rpm -y && yum install epel-release cmake3 -y', pre: "yum-config-manager --disable 'remi-php*' && yum-config-manager --enable remi-php80 && ln /usr/bin/cmake3 /usr/bin/cmake", extra: 'ls'}
        - {os: 'centos:latest', cli: 'dnf', dev: 'cmake', dep: 'dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm https://rpms.remirepo.net/enterprise/remi-release-8.rpm -y', pre: 'dnf module reset php && dnf module install php:remi-8.0 -y && dnf group install "Development Tools" -y', extra: "dnf --disablerepo '*' --enablerepo=extras swap centos-linux-repos centos-stream-repos -y && dnf distro-sync -y"}
    runs-on: ubuntu-latest
    container: ${{ matrix.container.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Build tools
        run: |
          ${{ matrix.container.extra }}
          ${{ matrix.container.cli }} update -y
          ${{ matrix.container.dep }} -y
          ${{ matrix.container.pre }}
          ${{ matrix.container.cli }} install sudo git libtool curl ${{ matrix.container.dev }} -y
      - name: Configure for ${{ matrix.container.os }}
        run: |
          curl -L https://github.com/libuv/libuv/archive/v1.44.1.tar.gz | tar xzf -
          cd libuv-1.44.1
          mkdir build
          cd build
          cmake .. -DBUILD_TESTING=ON
      - name: Build
        run: |
          cd libuv-1.44.1
          cmake --build build
          ls -lh build

  qemu:
    runs-on: ubuntu-latest
    name: cross-build-qemu-${{ matrix.config.target }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {target: aarch64, toolchain: gcc-aarch64-linux-gnu, cc: aarch64-linux-gnu-gcc, qemu: qemu-aarch64-static }
    steps:
      - uses: actions/checkout@v2
      - name: Install QEMU
        # this ensure install latest qemu on ubuntu, apt get version is old
        env:
          QEMU_SRC: "http://archive.ubuntu.com/ubuntu/pool/universe/q/qemu"
          QEMU_VER: "qemu-user-static_4\\.2-.*_amd64.deb$"
        run: |
          DEB=`curl -s $QEMU_SRC/ | grep -o -E 'href="([^"#]+)"' | cut -d'"' -f2 | grep $QEMU_VER | tail -1`
          wget $QEMU_SRC/$DEB
          sudo dpkg -i $DEB
      - name: Install ${{ matrix.config.toolchain }}
        run: |
          sudo apt update
          sudo apt install ${{ matrix.config.toolchain }} -y
      - name: Configure with ${{ matrix.config.cc }}
        run: |
          curl -L https://github.com/libuv/libuv/archive/v1.44.1.tar.gz | tar xzf -
          cd libuv-1.44.1
          mkdir build
          cd build
          cmake .. -DBUILD_TESTING=ON -DQEMU=ON -DCMAKE_C_COMPILER=${{ matrix.config.cc }}
      - name: Build
        run: |
          cd libuv-1.44.1
          cmake --build build
          ls -lh build
